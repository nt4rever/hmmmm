/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/users/entities/user.entity"]: await import("./modules/users/entities/user.entity"),
        ["./modules/users/entities/vote-per-day.entity"]: await import("./modules/users/entities/vote-per-day.entity"),
        ["./modules/areas/entities/location.entity"]: await import("./modules/areas/entities/location.entity"),
        ["./modules/areas/dto/create-area.dto"]: await import("./modules/areas/dto/create-area.dto"),
        ["./modules/areas/entities/area.entity"]: await import("./modules/areas/entities/area.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/shared/base/base.entity"), { "BaseEntity": { id: { required: false, type: () => String }, created_at: { required: false, type: () => Date }, updated_at: { required: false, type: () => Date }, deleted_at: { required: false, type: () => Date } } }], [import("./modules/users/entities/refresh-token.entity"), { "RefreshToken": { token: { required: true, type: () => String }, device_name: { required: true, type: () => String } } }], [import("./modules/users/entities/vote-per-day.entity"), { "VotePerDay": { point: { required: true, type: () => Number }, updated_at: { required: true, type: () => Date } } }], [import("./modules/users/entities/user.entity"), { "User": { first_name: { required: false, type: () => String }, last_name: { required: true, type: () => String }, email: { required: true, type: () => String }, phone_number: { required: false, type: () => String }, avatar: { required: false, type: () => String }, date_of_birth: { required: false, type: () => Date }, gender: { required: false, enum: t["./modules/users/entities/user.entity"].GENDER }, is_active: { required: true, type: () => Boolean }, role: { required: true, enum: t["./modules/users/entities/user.entity"].ROLES }, address: { required: false, type: () => String }, vote_per_day: { required: false, type: () => t["./modules/users/entities/vote-per-day.entity"].VotePerDay } } }], [import("./modules/users/dto/create-user.dto"), { "CreateUserDto": { first_name: { required: false, type: () => String, maxLength: 50 }, last_name: { required: true, type: () => String, maxLength: 50 }, email: { required: true, type: () => String, maxLength: 50 }, phone_number: { required: false, type: () => String, maxLength: 15 }, date_of_birth: { required: false, type: () => Date }, password: { required: true, type: () => String, minLength: 6, maxLength: 20 }, gender: { required: false, enum: t["./modules/users/entities/user.entity"].GENDER }, address: { required: false, type: () => String, maxLength: 50 }, role: { required: false, enum: t["./modules/users/entities/user.entity"].ROLES } } }], [import("./modules/users/dto/update-user.dto"), { "UpdateUserDto": { first_name: { required: false, type: () => String, maxLength: 50 }, last_name: { required: false, type: () => String, maxLength: 50 }, phone_number: { required: false, type: () => String, maxLength: 15 }, date_of_birth: { required: false, type: () => Date }, gender: { required: false, enum: t["./modules/users/entities/user.entity"].GENDER }, address: { required: false, type: () => String, maxLength: 50 } } }], [import("./modules/auth/dto/sign-up.dto"), { "SignUpDto": { first_name: { required: false, type: () => String, maxLength: 50 }, last_name: { required: true, type: () => String, maxLength: 50 }, email: { required: true, type: () => String, maxLength: 50 }, phone_number: { required: false, type: () => String, maxLength: 15 }, password: { required: true, type: () => String, minLength: 6, maxLength: 20 }, date_of_birth: { required: false, type: () => Date }, gender: { required: false, enum: t["./modules/users/entities/user.entity"].GENDER }, device_name: { required: false, type: () => String, maxLength: 100 } } }], [import("./modules/areas/entities/area.entity"), { "Area": { name: { required: true, type: () => String }, address: { required: true, type: () => String }, is_active: { required: true, type: () => Boolean }, location: { required: true, type: () => t["./modules/areas/entities/location.entity"].Location } } }], [import("./modules/areas/dto/create-area.dto"), { "CreateAreaDto": { name: { required: true, type: () => String, maxLength: 100 }, address: { required: true, type: () => String, maxLength: 1000 }, location: { required: true, type: () => t["./modules/areas/dto/create-area.dto"].LocationDto } }, "LocationDto": { lat: { required: true, type: () => Number, minimum: -90, maximum: 90 }, lng: { required: true, type: () => Number, minimum: -180, maximum: 180 }, radius: { required: true, type: () => Number, default: 1000, minimum: 0 } } }], [import("./modules/areas/dto/update-area.dto"), { "UpdateAreaDto": {} }], [import("./modules/areas/entities/location.entity"), { "Location": { lat: { required: true, type: () => Number }, lng: { required: true, type: () => Number }, radius: { required: true, type: () => Number } } }]], "controllers": [[import("./modules/users/users.controller"), { "UsersController": { "create": { type: t["./modules/users/entities/user.entity"].User }, "me": { type: t["./modules/users/entities/user.entity"].User }, "find": { type: t["./modules/users/entities/user.entity"].User }, "all": { type: Object }, "uploadAvatar": { type: t["./modules/users/entities/user.entity"].User }, "updateProfile": { type: t["./modules/users/entities/user.entity"].User } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "signUp": {}, "signIn": {}, "refreshAccessToken": {}, "logOut": {} } }], [import("./modules/areas/areas.controller"), { "AreasController": { "all": { type: Object }, "create": { type: t["./modules/areas/entities/area.entity"].Area }, "update": { type: t["./modules/areas/entities/area.entity"].Area } } }]] } };
};